{"version":3,"sources":["components/searchbar/Searchbar.js","services/imgApi.js","components/button/Button.js","components/modal/Modal.js","components/imageGallery/ImageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/loader/Loader.js","components/App.js","index.js"],"names":["Searchbar","state","search","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","name","onChange","Component","BASE_URL","KEY","fetchImages","query","pageNumber","axios","then","response","data","hits","Button","amountImg","onClick","MODAL_ROOT","document","querySelector","Modal","backdropRef","createRef","handleKeyPress","code","onClose","handleBackdropClick","current","window","addEventListener","removeEventListener","children","createPortal","ref","role","ImageGalleryItem","image","openModal","webformatURL","tags","id","src","alt","ImageGallery","images","map","largeImageURL","loaderComp","color","height","width","timeout","App","error","isLoading","isModalOpen","largeImage","onSearch","fetchImagesWithScroll","scroll","imagesApi","catch","finally","firstLoadedImage","scrollY","getElementById","getBoundingClientRect","top","scrollTo","behavior","url","closeModal","prevProps","prevState","Loader","length","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.01158612.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Searchbar.modal.css\";\r\n\r\nclass Searchbar extends Component {\r\n  state = { search: \"\" };\r\n  handleChange = (e) => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.search);\r\n    this.setState({ search: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.search}\r\n            name=\"search\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://pixabay.com/api/\";\r\nconst KEY = \"22368183-bf812a4cdd1e1ebd2a0bd646c\";\r\n\r\nexport const fetchImages = (query = \"\", pageNumber = 1) => {\r\n  return axios(\r\n    `${BASE_URL}?q=${query}&page=${pageNumber}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => response.data.hits);\r\n};\r\n\r\nexport { fetchImages as default };\r\n","import React from \"react\";\r\nimport \"./Button.modal.css\";\r\n\r\nconst Button = ({ fetchImages, amountImg }) => (\r\n  <div className=\" btnWrap\">\r\n    {amountImg % 12 === 0 ? (\r\n      <button type=\"button\" className=\"Button\" onClick={fetchImages}>\r\n        Load more...\r\n      </button>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default Button;\r\n","import React, { Component, createRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Modal.modal.css\";\r\n\r\nconst MODAL_ROOT = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  // state = {  }\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\n  backdropRef = createRef();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n    if (e.code !== \"Escape\") {\r\n      return;\r\n    }\r\n\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleBackdropClick = (e) => {\r\n    if (this.backdropRef.current && e.target !== this.backdropRef.current) {\r\n      return;\r\n    }\r\n\r\n    this.props.onClose();\r\n  };\r\n  render() {\r\n    const { children } = this.props;\r\n    return createPortal(\r\n      <div\r\n        className=\"Overlay\"\r\n        ref={this.backdropRef}\r\n        onClick={this.props.onClose}\r\n        role=\"presentation\"\r\n      >\r\n        <div className=\"Modal\">{children}</div>\r\n      </div>,\r\n      MODAL_ROOT\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./ImageGalleryItem.modal.css\";\r\n\r\nconst ImageGalleryItem = ({ image, openModal }) => {\r\n  const { webformatURL, tags } = image;\r\n\r\n  return (\r\n    <li id={image.id} onClick={openModal} className=\"ImageGalleryItem\">\r\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: propTypes.shape({\r\n    webformatURL: propTypes.string,\r\n  }),\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\r\nimport \"./ImageGallery.modal.css\";\r\n\r\nconst ImageGallery = ({ images, openModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          openModal={() => openModal(image.largeImageURL)}\r\n          key={image.id}\r\n          image={image}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./Loader.modal.css\";\r\n\r\nconst loaderComp = () => {\r\n  return (\r\n    <div className=\"loaderWrap\">\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        height={50}\r\n        width={120}\r\n        timeout={3000} // 3 secs\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default loaderComp;\r\n","import React, { Component } from \"react\";\r\nimport Searchbar from \"./searchbar/Searchbar\";\r\nimport * as imagesApi from \"../../src/services/imgApi\";\r\nimport Button from \"./button/Button\";\r\nimport Modal from \"./modal/Modal\";\r\nimport ImageGallery from \"./imageGallery/ImageGallery\";\r\nimport Loader from \"./loader/Loader\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    pageNumber: 1,\r\n    search: \"\",\r\n    error: \"\",\r\n    isLoading: false,\r\n    isModalOpen: false,\r\n    largeImage: null,\r\n  };\r\n\r\n  componentDidMount() {}\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.search !== this.state.search) {\r\n      this.fetchImages(false);\r\n    }\r\n  }\r\n\r\n  onSearch = (search) => {\r\n    this.setState({ search, images: [], pageNumber: 1 });\r\n  };\r\n\r\n  fetchImagesWithScroll = () => {\r\n    this.fetchImages(true);\r\n  };\r\n\r\n  fetchImages = (scroll) => {\r\n    this.setState({ isLoading: true });\r\n    const { search, pageNumber } = this.state;\r\n    imagesApi\r\n      .fetchImages(search, pageNumber)\r\n      .then((images) => {\r\n        this.setState((state) => ({\r\n          images: [...state.images, ...images],\r\n          pageNumber: state.pageNumber + 1,\r\n        }));\r\n        return images[0];\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      })\r\n      .finally(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .then((firstLoadedImage) => {\r\n        if (scroll) {\r\n          const { id } = firstLoadedImage;\r\n\r\n          const scrollY =\r\n            document.getElementById(id).getBoundingClientRect().top +\r\n            window.scrollY -\r\n            80;\r\n          window.scrollTo({\r\n            top: scrollY,\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  openModal = (url) => {\r\n    this.setState({\r\n      isModalOpen: true,\r\n      largeImage: url,\r\n    });\r\n  };\r\n  closeModal = () => this.setState({ isModalOpen: false });\r\n\r\n  render() {\r\n    const { isLoading, images, isModalOpen, largeImage } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.onSearch} />\r\n        <ImageGallery openModal={this.openModal} images={images} />\r\n        {isLoading && (\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#3f51b5\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000}\r\n          />\r\n        )}\r\n        {images.length > 0 && (\r\n          <Button\r\n            fetchImages={this.fetchImagesWithScroll}\r\n            amountImg={images.length}\r\n          />\r\n        )}\r\n        {isModalOpen && (\r\n          <Modal onClose={this.closeModal}>\r\n            <img src={largeImage} alt=\"\" />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}